<?xml version="1.0" encoding="UTF-8"?>
<project name="adito" default="start">

	<!-- Options for running Adito -->
	<property name="adito.conf" value="conf" />

	<!-- Standard build locations -->

	<property name="dir.lib" value="lib" />

	<!-- Ant Contrib is required -->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="${dir.lib}/ant-contrib.jar" />
		</classpath>
	</taskdef>

	<target name="console" depends="create-wrapper-conf,check-tools,check-permissions" description="Run Adito server in the foreground">
		<!-- Launch on Linux -->
		<if>
			<equals arg1="${os.name}" arg2="Linux" />
			<then>
				<exec executable="${basedir}/install/platforms/linux/adito">
					<arg value="console" />
					<env key="WRAPPER_CONF" value="${adito.conf}/wrapper.conf" />
					<env key="PIDDIR" value="${basedir}/adito/tmp" />
				</exec>
			</then>
			<else>
				<!-- Launch on Windows -->
				<if>
					<os family="windows" />
					<then>
						<exec executable="${basedir}/install/platforms/windows/wrapper">
							<arg value="-c" />
							<arg value="../../../${adito.conf}/wrapper.conf" />
							<arg value="wrapper.working.dir=../../.." />
							<arg value="wrapper.java.library.path.1=install/platforms/windows" />
						</exec>
					</then>
					<else>
						<!-- Fall back to manually executing -->
						<echo>
							Service wrapper not currently supported on this platform (${os.name}), so falling back to 
							generic method. You will not have restart ability from the user interface and
							beware of using CTRL+C, it may leave processes running
						</echo>
						<antcall target="start-using-java" />
					</else>
				</if>
			</else>
		</if>
	</target>

	<target name="start-using-java" depends="check-tools" description="Launch Adito server using Java-only method, avoiding the wrapper.">
		<java fork="true" classname="com.adito.boot.Bootstrap">
			<classpath>
				<pathelement path="${dir.lib}/adito-boot.jar" />
			</classpath>
			<arg value="--conf=${adito.conf}" />
		</java>
	</target>

	<target name="start" depends="create-wrapper-conf, check-tools, check-permissions" description="Start Adito server in the background">
		<!-- Launch on Linux -->
		<if>
			<equals arg1="${os.name}" arg2="Linux" />
			<then>
				<exec executable="${basedir}/install/platforms/linux/adito">
					<arg value="start" />
					<env key="WRAPPER_CONF" value="${adito.conf}/wrapper.conf" />
				</exec>
				<echo>Adito started</echo>
			</then>
			<else>
				<!-- Launch on Windows -->
				<if>
					<os family="windows" />
					<then>
						<exec spawn="true" executable="${basedir}/install/platforms/windows/wrapper">
							<arg value="-c" />
							<arg value="../../../${adito.conf}/wrapper.conf" />
							<arg value="wrapper.working.dir=../../.." />
							<arg value="wrapper.java.library.path.1=install/platforms/windows" />
						</exec>
						<echo>Adito started</echo>
					</then>
					<else>
						<!-- Fall back to manually executing -->
						<echo>
							Service wrapper not currently supported on this platform (${os.name}), so falling back to 
							generic method. You will not have restart ability from the user interface and
							beware of using CTRL+C, it may leave processes running
						</echo>
						<java spawn="true" fork="true" classname="com.adito.boot.Bootstrap">
							<classpath>
								<pathelement path="${dir.lib}/adito-boot.jar" />
							</classpath>
							<arg value="--conf=${adito.conf}" />
						</java>
						<echo>Adito started</echo>
					</else>
				</if>
			</else>
		</if>
	</target>

	<!-- Stop tun running Adito server -->
	<target name="stop" depends="check-permissions">
		<!-- Stop on Linux -->
		<if>
			<equals arg1="${os.name}" arg2="Linux" />
			<then>
				<exec executable="${basedir}/install/platforms/linux/adito">
					<arg value="stop" />
					<env key="WRAPPER_CONF" value="${adito.conf}/wrapper.conf" />
				</exec>
			</then>
			<else>
				<antcall target="stop-using-signal" />
			</else>
		</if>
	</target>

	<!-- Stop the running Adito using signal via run file -->
	<target name="stop-using-signal">
		<echo file="tmp/server.run">shutdown</echo>
		<echo>Shutdown signal sent. This may take a few seconds to take effect.</echo>
	</target>

	<!-- Restart the running Adito server -->
	<target name="restart" depends="create-wrapper-conf, check-tools, check-permissions">
		<!-- Restart on Linux -->
		<if>
			<equals arg1="${os.name}" arg2="Linux" />
			<then>
				<exec executable="${basedir}/install/platforms/linux/adito">
					<arg value="restart" />
					<env key="WRAPPER_CONF" value="${adito.conf}/wrapper.conf" />
				</exec>
			</then>
			<else>
				<if>
					<os family="windows" />
					<then>
						<echo file="tmp/server.run">restart</echo>
						<echo>Restart signal sent. This may take a few seconds to take effect.</echo>
					</then>
					<else>
						<!-- Fall back to manually executing -->
						<echo>Restart not implemented on this platform</echo>
					</else>
				</if>
			</else>
		</if>
	</target>

	<!-- Create wrapper.conf dynamically from wrapper.conf.base -->
	<target name="create-wrapper-conf" >

		<!-- Select the correct wrapper directory based on the OS name -->

		<!-- Overriding property value from within <if> statement does not seem to work,
		     so we're have to do this the ugly way. -->

		<if><equals arg1="${os.name}" arg2="Linux" />
			<then><property name="wrapper.java.library.path" value="install/platforms/linux/x86" /></then>
		<else>
			<if><os family="windows" />
				<then><property name="wrapper.java.library.path" value="install/platforms/windows" /></then>
			<else>
					<echo>The wrapper directory for your OS (${os.name}) is not automatically detected!</echo>
					<echo>Please send mail to the Adito mailinglists, file a bug report or post to the forums.</echo>
					<echo>Meanwhile you can create the wrapper.conf manually or add an entry to "create-wrapper-conf"</echo>
					<echo>in adito/build.xml for your OS.</echo>
					<property name="wrapper.java.library.path" value="install/platforms/undetected" />
			</else>
			</if>
		</else>
		</if>

		<!-- Overwrite existing wrapper.conf. Useful if the user changes Java version. -->
		<!-- Do not overwrite if the OS was undetected. -->

		<if><equals arg1="${wrapper.java.library.path}" arg2="install/platforms/undetected" />
			<then><copy failonerror="false" file="${adito.conf}/wrapper.conf.base" tofile="${adito.conf}/wrapper.conf" /></then>
		<else>
			<copy overwrite="true" failonerror="false" file="${adito.conf}/wrapper.conf.base" tofile="${adito.conf}/wrapper.conf" />
		</else>
		</if>
		

		<echo>Creating wrapper configuration dynamically</echo>
		<echo></echo>
		<echo>   Java executable: ${java.home}/bin/java</echo>
		<echo>   Wrapper directory: ${wrapper.java.library.path}</echo>

                <replace file="${adito.conf}/wrapper.conf">
                        <replacefilter token="@WRAPPER.JAVA.COMMAND@" value="${java.home}/bin/java" />
                        <replacefilter token="@WRAPPER.JAVA.LIBRARY.PATH@" value="${wrapper.java.library.path}" />
                </replace>


	</target>

	<!-- Start the install wizard  -->
	<target name="install" depends="check-tools, check-permissions">

		<!-- Just in case -->
		<mkdir dir="logs" />
		<mkdir dir="tmp" />

		<java fork="true" classname="com.adito.boot.Bootstrap">
			<arg value="--install" />
			<classpath>
				<pathelement path="${dir.lib}/adito-boot.jar" />
			</classpath>
			<arg value="--conf=${adito.conf}" />
		</java>
	</target>


	<!-- Install Adito as a service  -->
	<target name="install-service" depends="check-tools,check-permissions">
		<if>
			<equals arg1="${os.name}" arg2="Linux" />
			<then>
				<!-- Install on Linux -->
				<echo>Installing Adito as Linux service</echo>
				<exec executable="${basedir}/install/platforms/linux/install-service">
					<arg value="-j" />
					<arg value="${java.home}" />
				</exec>
				<echo>Adito installed as Linux service</echo>
			</then>
			<else>
				<!-- Install on Windows -->
				<if>
					<os family="windows" />
					<then>
						<!-- Install on Windows -->
						<echo>Installing Adito as Windows service</echo>
						<exec spawn="true" executable="${basedir}/install/platforms/windows/wrapper">
							<arg value="-i" />
							<arg value="../../../${adito.conf}/wrapper.conf" />
							<arg value="wrapper.working.dir=../../.." />
							<arg value="wrapper.java.library.path.1=install/platforms/windows" />
						</exec>
						<echo>Adito installed as Windows service</echo>
					</then>
					<else>
						<!-- Fall back to manually executing -->
						<echo level="error">
							Service wrapper not currently supported on this platform (${os.name}), service cannot be installed.
						</echo>
					</else>
				</if>
			</else>
		</if>
	</target>

	<!-- Uninstall Adito as a services  -->
	<target name="uninstall-service" depends="check-permissions">
		<if>
			<equals arg1="${os.name}" arg2="Linux" />
			<then>
				<!-- Install on Linux -->
				<echo>Uninstalling Adito Linux service</echo>
				<exec executable="${basedir}/install/platforms/linux/install-service">
					<arg value="-u" />
				</exec>
				<echo>Uinstalled Adito Linux service</echo>
			</then>
			<else>
				<!-- Install on Windows -->
				<if>
					<os family="windows" />
					<then>
						<!-- Install on Linux -->
						<echo>Uinstallign Adito Windows service</echo>
						<exec spawn="true" executable="${basedir}/install/platforms/windows/wrapper">
							<arg value="-r" />
							<arg value="../../../${adito.conf}/wrapper.conf" />
							<arg value="wrapper.working.dir=../../.." />
							<arg value="wrapper.java.library.path.1=install/platforms/windows" />
						</exec>
						<echo>Uinstalled Adito Windows server</echo>
					</then>
					<else>
						<!-- Fall back to manually executing -->
						<echo level="error">
							Service wrapper not currently supported on this platform (${os.name}), service cannot be uninstalled.
						</echo>
					</else>
				</if>
			</else>
		</if>
	</target>


	<target name="set-tools" description="Set the location of tools.jar or classes.jar.">
		<!-- We need to do this because properties are immutable and <if> statements
		     are not allowed outside target definitions. -->

		<!-- Mac OS X is different and needs to be treated as such: -->
		<!-- there's no Tools.jar in Mac OS X Java -->
		<if><equals arg1="${os.name}" arg2="Mac OS X" /><then>
			<property name="tools.jar.jdk" location="${java.home}/../classes/classes.jar" />
			<property name="tools.jar" value="lib/classes.jar" />
		</then>

		<!-- Most other OS'es with Sun's JDK have tools.jar in the same place -->
		<else>
			<!-- Location of tools.jar once copied in place (Java compiler) -->
			<property name="tools.jar" value="lib/tools.jar" />
		
			<!-- Tools.jar location on Windows, Linux and others using Sun's JDK -->
			<property name="tools.jar.jdk" location="${java.home}/../lib/tools.jar" />
		</else>
		</if>	
	</target>

        <target name="check-tools" description="Test that tools.jar exists. Adito won't launch without it" depends="set-tools">
		<if>
			<!-- Check if a tools.jar is available already in $ADITO_HOME/adito/lib -->
			<not><available file="${tools.jar}"/></not>

			<!-- Was not available, copy it from JDK's lib directory -->
			<then>
				<echo message="Couldn't find tools.jar from $ADITO_HOME/adito/lib"/>

				<!-- Was not available, copy it from JDK's lib directory. Fail on error. -->
			 	<echo message="Copying the tools.jar from your JDK"/>

				<fail message="Could not find classes.jar from your JDK. Check the output of ant sysinfo.">
				<condition><not><available file="${tools.jar.jdk}"/></not></condition>
				</fail>

				<copy todir="${dir.lib}" file="${tools.jar.jdk}" failonerror="True"/>
			</then>
		</if>
        </target>

	<target name="check-permissions" description="Checks and fixes wrapper file permissions on Linux">
	<!-- Needed because ant's tar task can't understand file permissions and removes the executable flag -->
		<if>
			<equals arg1="${os.name}" arg2="Linux" />
			<then>
				<chmod perm="a+x" type="file" file="install/platforms/linux/adito" />
				<chmod perm="a+x" type="file" file="install/platforms/linux/x86/wrapper" />
				<chmod perm="a+x" type="file" file="install/platforms/linux/x86-64/wrapper" />
				<chmod perm="a+x" type="file" file="install/platforms/linux/install-service" />
			</then>
		</if>
	</target>


</project>

